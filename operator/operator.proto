syntax = "proto3";

service CanaryGateway {
    rpc Create(Canary) returns (Canary) {}
    rpc List(CanaryGatewayListQuery) returns (CanaryList) {}
}

service Operator {
    rpc Initialize(Job) returns (Job) {}
    rpc Finish(Job) returns (Job) {}
}

message Canary {
    string id = 1; /* ReadOnly */
    Status status = 2; /* ReadOnly */

    repeated Job jobs = 100;
}

message CanaryList {
    repeated Canary data = 1;
}

// The query is always using OR between same types and ANDs between other fields, e.g.
// { statuses: [INITIALIZING, PENDING] } returns all canaries currently INITIALIZING <OR> PENDING
// { statuses: [INITIALIZING], ids: [1, 2, 3, 4] } only returns those from 1, 2, 3, 4 which are INITIALIZING
message CanaryGatewayListQuery {
    repeated string ids = 1;
    repeated Status statuses = 2;
}

message Job {
    string id = 1; /* ReadOnly */
    Status status = 2; /* ReadOnly */
}

enum Status {
    NEW = 0;
    INITIALIZING = 1;
    PENDING = 2;

    SUCCESS = 3;
    FAILURE = 4;
    TIMEOUT = 5;
}


message JobList {
    repeated JobList data = 1;
}
